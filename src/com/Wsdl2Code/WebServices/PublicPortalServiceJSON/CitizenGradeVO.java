package com.Wsdl2Code.WebServices.PublicPortalServiceJSON;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 6/9/2014 3:15:59 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class CitizenGradeVO implements KvmSerializable {
    
    public long codeId;
    public boolean codeIdSpecified;
    public long reportingTermId;
    public boolean reportingTermIdSpecified;
    public long sectionId;
    public boolean sectionIdSpecified;
    public int storeType;
    public boolean storeTypeSpecified;
    
    public CitizenGradeVO(){}
    
    public CitizenGradeVO(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("codeId"))
        {
            Object obj = soapObject.getProperty("codeId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                codeId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                codeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("codeIdSpecified"))
        {
            Object obj = soapObject.getProperty("codeIdSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                codeIdSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                codeIdSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("reportingTermId"))
        {
            Object obj = soapObject.getProperty("reportingTermId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                reportingTermId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                reportingTermId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("reportingTermIdSpecified"))
        {
            Object obj = soapObject.getProperty("reportingTermIdSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                reportingTermIdSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                reportingTermIdSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("sectionId"))
        {
            Object obj = soapObject.getProperty("sectionId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                sectionId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                sectionId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("sectionIdSpecified"))
        {
            Object obj = soapObject.getProperty("sectionIdSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                sectionIdSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                sectionIdSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("storeType"))
        {
            Object obj = soapObject.getProperty("storeType");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                storeType = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                storeType = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("storeTypeSpecified"))
        {
            Object obj = soapObject.getProperty("storeTypeSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                storeTypeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                storeTypeSpecified = (Boolean) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return codeId;
            case 1:
                return codeIdSpecified;
            case 2:
                return reportingTermId;
            case 3:
                return reportingTermIdSpecified;
            case 4:
                return sectionId;
            case 5:
                return sectionIdSpecified;
            case 6:
                return storeType;
            case 7:
                return storeTypeSpecified;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 8;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = Long.class;
                info.name = "codeId";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "codeIdSpecified";
                break;
            case 2:
                info.type = Long.class;
                info.name = "reportingTermId";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "reportingTermIdSpecified";
                break;
            case 4:
                info.type = Long.class;
                info.name = "sectionId";
                break;
            case 5:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "sectionIdSpecified";
                break;
            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "storeType";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "storeTypeSpecified";
                break;
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
