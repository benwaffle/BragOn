package com.Wsdl2Code.WebServices.PublicPortalServiceJSON;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 6/12/2014 1:13:09 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import com.Wsdl2Code.WebServices.PublicPortalServiceJSON.VectorString;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class NotificationSettingsVO implements KvmSerializable {
    
    public boolean applyToAllStudents;
    public boolean applyToAllStudentsSpecified;
    public boolean balanceAlerts;
    public boolean balanceAlertsSpecified;
    public boolean detailedAssignments;
    public boolean detailedAssignmentsSpecified;
    public boolean detailedAttendance;
    public boolean detailedAttendanceSpecified;
    public VectorString emailAddresses;
    public int frequency;
    public boolean frequencySpecified;
    public boolean gradeAndAttSummary;
    public boolean gradeAndAttSummarySpecified;
    public long guardianStudentId;
    public boolean guardianStudentIdSpecified;
    public String mainEmail;
    public boolean schoolAnnouncements;
    public boolean schoolAnnouncementsSpecified;
    public boolean sendNow;
    public boolean sendNowSpecified;
    
    public NotificationSettingsVO(){}
    
    public NotificationSettingsVO(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("applyToAllStudents"))
        {
            Object obj = soapObject.getProperty("applyToAllStudents");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                applyToAllStudents = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                applyToAllStudents = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("applyToAllStudentsSpecified"))
        {
            Object obj = soapObject.getProperty("applyToAllStudentsSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                applyToAllStudentsSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                applyToAllStudentsSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("balanceAlerts"))
        {
            Object obj = soapObject.getProperty("balanceAlerts");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                balanceAlerts = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                balanceAlerts = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("balanceAlertsSpecified"))
        {
            Object obj = soapObject.getProperty("balanceAlertsSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                balanceAlertsSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                balanceAlertsSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("detailedAssignments"))
        {
            Object obj = soapObject.getProperty("detailedAssignments");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                detailedAssignments = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                detailedAssignments = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("detailedAssignmentsSpecified"))
        {
            Object obj = soapObject.getProperty("detailedAssignmentsSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                detailedAssignmentsSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                detailedAssignmentsSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("detailedAttendance"))
        {
            Object obj = soapObject.getProperty("detailedAttendance");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                detailedAttendance = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                detailedAttendance = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("detailedAttendanceSpecified"))
        {
            Object obj = soapObject.getProperty("detailedAttendanceSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                detailedAttendanceSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                detailedAttendanceSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("emailAddresses"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("emailAddresses");
            emailAddresses = new VectorString(j);
        }
        if (soapObject.hasProperty("frequency"))
        {
            Object obj = soapObject.getProperty("frequency");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                frequency = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                frequency = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("frequencySpecified"))
        {
            Object obj = soapObject.getProperty("frequencySpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                frequencySpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                frequencySpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("gradeAndAttSummary"))
        {
            Object obj = soapObject.getProperty("gradeAndAttSummary");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                gradeAndAttSummary = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                gradeAndAttSummary = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("gradeAndAttSummarySpecified"))
        {
            Object obj = soapObject.getProperty("gradeAndAttSummarySpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                gradeAndAttSummarySpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                gradeAndAttSummarySpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("guardianStudentId"))
        {
            Object obj = soapObject.getProperty("guardianStudentId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                guardianStudentId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                guardianStudentId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("guardianStudentIdSpecified"))
        {
            Object obj = soapObject.getProperty("guardianStudentIdSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                guardianStudentIdSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                guardianStudentIdSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("mainEmail"))
        {
            Object obj = soapObject.getProperty("mainEmail");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                mainEmail = j.toString();
            }else if (obj!= null && obj instanceof String){
                mainEmail = (String) obj;
            }
        }
        if (soapObject.hasProperty("schoolAnnouncements"))
        {
            Object obj = soapObject.getProperty("schoolAnnouncements");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                schoolAnnouncements = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                schoolAnnouncements = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("schoolAnnouncementsSpecified"))
        {
            Object obj = soapObject.getProperty("schoolAnnouncementsSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                schoolAnnouncementsSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                schoolAnnouncementsSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("sendNow"))
        {
            Object obj = soapObject.getProperty("sendNow");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                sendNow = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                sendNow = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("sendNowSpecified"))
        {
            Object obj = soapObject.getProperty("sendNowSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                sendNowSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                sendNowSpecified = (Boolean) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return applyToAllStudents;
            case 1:
                return applyToAllStudentsSpecified;
            case 2:
                return balanceAlerts;
            case 3:
                return balanceAlertsSpecified;
            case 4:
                return detailedAssignments;
            case 5:
                return detailedAssignmentsSpecified;
            case 6:
                return detailedAttendance;
            case 7:
                return detailedAttendanceSpecified;
            case 8:
                return emailAddresses;
            case 9:
                return frequency;
            case 10:
                return frequencySpecified;
            case 11:
                return gradeAndAttSummary;
            case 12:
                return gradeAndAttSummarySpecified;
            case 13:
                return guardianStudentId;
            case 14:
                return guardianStudentIdSpecified;
            case 15:
                return mainEmail;
            case 16:
                return schoolAnnouncements;
            case 17:
                return schoolAnnouncementsSpecified;
            case 18:
                return sendNow;
            case 19:
                return sendNowSpecified;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 20;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "applyToAllStudents";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "applyToAllStudentsSpecified";
                break;
            case 2:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "balanceAlerts";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "balanceAlertsSpecified";
                break;
            case 4:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "detailedAssignments";
                break;
            case 5:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "detailedAssignmentsSpecified";
                break;
            case 6:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "detailedAttendance";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "detailedAttendanceSpecified";
                break;
            case 8:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "emailAddresses";
                break;
            case 9:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "frequency";
                break;
            case 10:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "frequencySpecified";
                break;
            case 11:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "gradeAndAttSummary";
                break;
            case 12:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "gradeAndAttSummarySpecified";
                break;
            case 13:
                info.type = Long.class;
                info.name = "guardianStudentId";
                break;
            case 14:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "guardianStudentIdSpecified";
                break;
            case 15:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "mainEmail";
                break;
            case 16:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "schoolAnnouncements";
                break;
            case 17:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "schoolAnnouncementsSpecified";
                break;
            case 18:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "sendNow";
                break;
            case 19:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "sendNowSpecified";
                break;
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
