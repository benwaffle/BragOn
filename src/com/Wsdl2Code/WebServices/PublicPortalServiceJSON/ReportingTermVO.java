package com.Wsdl2Code.WebServices.PublicPortalServiceJSON;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 6/9/2014 3:15:59 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class ReportingTermVO implements KvmSerializable {
    
    public String abbreviation;
    public String endDate;
    public boolean endDateSpecified;
    public long id;
    public boolean idSpecified;
    public long schoolid;
    public boolean schoolidSpecified;
    public boolean sendingGrades;
    public boolean sendingGradesSpecified;
    public String startDate;
    public boolean startDateSpecified;
    public boolean suppressGrades;
    public boolean suppressGradesSpecified;
    public boolean suppressPercents;
    public boolean suppressPercentsSpecified;
    public long termid;
    public boolean termidSpecified;
    public String title;
    public long yearid;
    public boolean yearidSpecified;
    
    public ReportingTermVO(){}
    
    public ReportingTermVO(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("abbreviation"))
        {
            Object obj = soapObject.getProperty("abbreviation");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                abbreviation = j.toString();
            }else if (obj!= null && obj instanceof String){
                abbreviation = (String) obj;
            }
        }
        if (soapObject.hasProperty("endDate"))
        {
            Object obj = soapObject.getProperty("endDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                endDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                endDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("endDateSpecified"))
        {
            Object obj = soapObject.getProperty("endDateSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                endDateSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                endDateSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("id"))
        {
            Object obj = soapObject.getProperty("id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                id = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("idSpecified"))
        {
            Object obj = soapObject.getProperty("idSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("schoolid"))
        {
            Object obj = soapObject.getProperty("schoolid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                schoolid = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                schoolid = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("schoolidSpecified"))
        {
            Object obj = soapObject.getProperty("schoolidSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                schoolidSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                schoolidSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("sendingGrades"))
        {
            Object obj = soapObject.getProperty("sendingGrades");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                sendingGrades = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                sendingGrades = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("sendingGradesSpecified"))
        {
            Object obj = soapObject.getProperty("sendingGradesSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                sendingGradesSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                sendingGradesSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("startDate"))
        {
            Object obj = soapObject.getProperty("startDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                startDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                startDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("startDateSpecified"))
        {
            Object obj = soapObject.getProperty("startDateSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                startDateSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                startDateSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("suppressGrades"))
        {
            Object obj = soapObject.getProperty("suppressGrades");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                suppressGrades = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                suppressGrades = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("suppressGradesSpecified"))
        {
            Object obj = soapObject.getProperty("suppressGradesSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                suppressGradesSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                suppressGradesSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("suppressPercents"))
        {
            Object obj = soapObject.getProperty("suppressPercents");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                suppressPercents = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                suppressPercents = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("suppressPercentsSpecified"))
        {
            Object obj = soapObject.getProperty("suppressPercentsSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                suppressPercentsSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                suppressPercentsSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("termid"))
        {
            Object obj = soapObject.getProperty("termid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                termid = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                termid = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("termidSpecified"))
        {
            Object obj = soapObject.getProperty("termidSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                termidSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                termidSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("title"))
        {
            Object obj = soapObject.getProperty("title");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                title = j.toString();
            }else if (obj!= null && obj instanceof String){
                title = (String) obj;
            }
        }
        if (soapObject.hasProperty("yearid"))
        {
            Object obj = soapObject.getProperty("yearid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                yearid = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                yearid = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("yearidSpecified"))
        {
            Object obj = soapObject.getProperty("yearidSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                yearidSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                yearidSpecified = (Boolean) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return abbreviation;
            case 1:
                return endDate;
            case 2:
                return endDateSpecified;
            case 3:
                return id;
            case 4:
                return idSpecified;
            case 5:
                return schoolid;
            case 6:
                return schoolidSpecified;
            case 7:
                return sendingGrades;
            case 8:
                return sendingGradesSpecified;
            case 9:
                return startDate;
            case 10:
                return startDateSpecified;
            case 11:
                return suppressGrades;
            case 12:
                return suppressGradesSpecified;
            case 13:
                return suppressPercents;
            case 14:
                return suppressPercentsSpecified;
            case 15:
                return termid;
            case 16:
                return termidSpecified;
            case 17:
                return title;
            case 18:
                return yearid;
            case 19:
                return yearidSpecified;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 20;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "abbreviation";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "endDate";
                break;
            case 2:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "endDateSpecified";
                break;
            case 3:
                info.type = Long.class;
                info.name = "id";
                break;
            case 4:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "idSpecified";
                break;
            case 5:
                info.type = Long.class;
                info.name = "schoolid";
                break;
            case 6:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "schoolidSpecified";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "sendingGrades";
                break;
            case 8:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "sendingGradesSpecified";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "startDate";
                break;
            case 10:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "startDateSpecified";
                break;
            case 11:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "suppressGrades";
                break;
            case 12:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "suppressGradesSpecified";
                break;
            case 13:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "suppressPercents";
                break;
            case 14:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "suppressPercentsSpecified";
                break;
            case 15:
                info.type = Long.class;
                info.name = "termid";
                break;
            case 16:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "termidSpecified";
                break;
            case 17:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "title";
                break;
            case 18:
                info.type = Long.class;
                info.name = "yearid";
                break;
            case 19:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "yearidSpecified";
                break;
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
