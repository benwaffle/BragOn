package com.Wsdl2Code.WebServices.PublicPortalServiceJSON;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 6/12/2014 1:13:09 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class AttendanceVO implements KvmSerializable {
    
    public double adaValueCode;
    public boolean adaValueCodeSpecified;
    public double adaValueTime;
    public boolean adaValueTimeSpecified;
    public double admValue;
    public boolean admValueSpecified;
    public long attCodeid;
    public boolean attCodeidSpecified;
    public String attComment;
    public String attDate;
    public boolean attDateSpecified;
    public int attFlags;
    public boolean attFlagsSpecified;
    public int attInterval;
    public boolean attIntervalSpecified;
    public String attModeCode;
    public long ccid;
    public boolean ccidSpecified;
    public long id;
    public boolean idSpecified;
    public long periodid;
    public boolean periodidSpecified;
    public long schoolid;
    public boolean schoolidSpecified;
    public long studentid;
    public boolean studentidSpecified;
    public double totalMinutes;
    public boolean totalMinutesSpecified;
    public String transactionType;
    public int yearid;
    public boolean yearidSpecified;
    
    public AttendanceVO(){}
    
    public AttendanceVO(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("adaValueCode"))
        {
            Object obj = soapObject.getProperty("adaValueCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                adaValueCode = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                adaValueCode = (Double) obj;
            }
        }
        if (soapObject.hasProperty("adaValueCodeSpecified"))
        {
            Object obj = soapObject.getProperty("adaValueCodeSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                adaValueCodeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                adaValueCodeSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("adaValueTime"))
        {
            Object obj = soapObject.getProperty("adaValueTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                adaValueTime = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                adaValueTime = (Double) obj;
            }
        }
        if (soapObject.hasProperty("adaValueTimeSpecified"))
        {
            Object obj = soapObject.getProperty("adaValueTimeSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                adaValueTimeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                adaValueTimeSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("admValue"))
        {
            Object obj = soapObject.getProperty("admValue");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                admValue = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                admValue = (Double) obj;
            }
        }
        if (soapObject.hasProperty("admValueSpecified"))
        {
            Object obj = soapObject.getProperty("admValueSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                admValueSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                admValueSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("attCodeid"))
        {
            Object obj = soapObject.getProperty("attCodeid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attCodeid = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                attCodeid = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("attCodeidSpecified"))
        {
            Object obj = soapObject.getProperty("attCodeidSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attCodeidSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                attCodeidSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("attComment"))
        {
            Object obj = soapObject.getProperty("attComment");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attComment = j.toString();
            }else if (obj!= null && obj instanceof String){
                attComment = (String) obj;
            }
        }
        if (soapObject.hasProperty("attDate"))
        {
            Object obj = soapObject.getProperty("attDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                attDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("attDateSpecified"))
        {
            Object obj = soapObject.getProperty("attDateSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attDateSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                attDateSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("attFlags"))
        {
            Object obj = soapObject.getProperty("attFlags");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attFlags = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                attFlags = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("attFlagsSpecified"))
        {
            Object obj = soapObject.getProperty("attFlagsSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attFlagsSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                attFlagsSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("attInterval"))
        {
            Object obj = soapObject.getProperty("attInterval");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attInterval = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                attInterval = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("attIntervalSpecified"))
        {
            Object obj = soapObject.getProperty("attIntervalSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attIntervalSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                attIntervalSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("attModeCode"))
        {
            Object obj = soapObject.getProperty("attModeCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attModeCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                attModeCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("ccid"))
        {
            Object obj = soapObject.getProperty("ccid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ccid = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                ccid = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ccidSpecified"))
        {
            Object obj = soapObject.getProperty("ccidSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ccidSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                ccidSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("id"))
        {
            Object obj = soapObject.getProperty("id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                id = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("idSpecified"))
        {
            Object obj = soapObject.getProperty("idSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("periodid"))
        {
            Object obj = soapObject.getProperty("periodid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                periodid = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                periodid = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("periodidSpecified"))
        {
            Object obj = soapObject.getProperty("periodidSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                periodidSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                periodidSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("schoolid"))
        {
            Object obj = soapObject.getProperty("schoolid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                schoolid = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                schoolid = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("schoolidSpecified"))
        {
            Object obj = soapObject.getProperty("schoolidSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                schoolidSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                schoolidSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("studentid"))
        {
            Object obj = soapObject.getProperty("studentid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                studentid = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                studentid = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("studentidSpecified"))
        {
            Object obj = soapObject.getProperty("studentidSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                studentidSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                studentidSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("totalMinutes"))
        {
            Object obj = soapObject.getProperty("totalMinutes");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                totalMinutes = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                totalMinutes = (Double) obj;
            }
        }
        if (soapObject.hasProperty("totalMinutesSpecified"))
        {
            Object obj = soapObject.getProperty("totalMinutesSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                totalMinutesSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                totalMinutesSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("transactionType"))
        {
            Object obj = soapObject.getProperty("transactionType");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                transactionType = j.toString();
            }else if (obj!= null && obj instanceof String){
                transactionType = (String) obj;
            }
        }
        if (soapObject.hasProperty("yearid"))
        {
            Object obj = soapObject.getProperty("yearid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                yearid = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                yearid = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("yearidSpecified"))
        {
            Object obj = soapObject.getProperty("yearidSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                yearidSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                yearidSpecified = (Boolean) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return adaValueCode;
            case 1:
                return adaValueCodeSpecified;
            case 2:
                return adaValueTime;
            case 3:
                return adaValueTimeSpecified;
            case 4:
                return admValue;
            case 5:
                return admValueSpecified;
            case 6:
                return attCodeid;
            case 7:
                return attCodeidSpecified;
            case 8:
                return attComment;
            case 9:
                return attDate;
            case 10:
                return attDateSpecified;
            case 11:
                return attFlags;
            case 12:
                return attFlagsSpecified;
            case 13:
                return attInterval;
            case 14:
                return attIntervalSpecified;
            case 15:
                return attModeCode;
            case 16:
                return ccid;
            case 17:
                return ccidSpecified;
            case 18:
                return id;
            case 19:
                return idSpecified;
            case 20:
                return periodid;
            case 21:
                return periodidSpecified;
            case 22:
                return schoolid;
            case 23:
                return schoolidSpecified;
            case 24:
                return studentid;
            case 25:
                return studentidSpecified;
            case 26:
                return totalMinutes;
            case 27:
                return totalMinutesSpecified;
            case 28:
                return transactionType;
            case 29:
                return yearid;
            case 30:
                return yearidSpecified;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 31;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = Double.class;
                info.name = "adaValueCode";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "adaValueCodeSpecified";
                break;
            case 2:
                info.type = Double.class;
                info.name = "adaValueTime";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "adaValueTimeSpecified";
                break;
            case 4:
                info.type = Double.class;
                info.name = "admValue";
                break;
            case 5:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "admValueSpecified";
                break;
            case 6:
                info.type = Long.class;
                info.name = "attCodeid";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "attCodeidSpecified";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "attComment";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "attDate";
                break;
            case 10:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "attDateSpecified";
                break;
            case 11:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "attFlags";
                break;
            case 12:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "attFlagsSpecified";
                break;
            case 13:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "attInterval";
                break;
            case 14:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "attIntervalSpecified";
                break;
            case 15:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "attModeCode";
                break;
            case 16:
                info.type = Long.class;
                info.name = "ccid";
                break;
            case 17:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ccidSpecified";
                break;
            case 18:
                info.type = Long.class;
                info.name = "id";
                break;
            case 19:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "idSpecified";
                break;
            case 20:
                info.type = Long.class;
                info.name = "periodid";
                break;
            case 21:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "periodidSpecified";
                break;
            case 22:
                info.type = Long.class;
                info.name = "schoolid";
                break;
            case 23:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "schoolidSpecified";
                break;
            case 24:
                info.type = Long.class;
                info.name = "studentid";
                break;
            case 25:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "studentidSpecified";
                break;
            case 26:
                info.type = Double.class;
                info.name = "totalMinutes";
                break;
            case 27:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "totalMinutesSpecified";
                break;
            case 28:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "transactionType";
                break;
            case 29:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "yearid";
                break;
            case 30:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "yearidSpecified";
                break;
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
